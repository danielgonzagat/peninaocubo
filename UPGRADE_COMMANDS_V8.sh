#!/bin/bash
# Script para aplicar upgrade v8.0 do peninaocubo
# Execute: bash UPGRADE_COMMANDS_V8.sh

set -e

echo "üöÄ PENIN-Œ© v8.0 Upgrade Script"
echo "================================"

# 1) Criar branch de upgrade
echo "üìù Criando branch de upgrade..."
git checkout -b chore/v8-upgrade

# 2) Instalar depend√™ncias para dev
echo "üì¶ Instalando depend√™ncias..."
if command -v uv &> /dev/null; then
    uv pip install -r requirements.txt
else
    pip install -r requirements.txt
fi

# 3) Instalar pre-commit
echo "üîß Instalando pre-commit..."
if command -v pre-commit &> /dev/null; then
    pre-commit install
else
    echo "‚ö†Ô∏è  pre-commit n√£o encontrado. Instale com: pip install pre-commit"
fi

# 4) Executar testes b√°sicos
echo "üß™ Executando testes b√°sicos..."
python3 -c "
import sys
sys.path.insert(0, '.')
import penin.omega.caos as caos
print('‚úÖ CAOS import OK')
print('‚úÖ phi_caos functions:', len([n for n in dir(caos) if n == 'phi_caos']))
print('‚úÖ Test passed: only one phi_caos function')
"

# 5) Linters (se dispon√≠veis)
echo "üîç Executando linters..."
if command -v ruff &> /dev/null; then
    ruff . --fix
    echo "‚úÖ Ruff executado"
else
    echo "‚ö†Ô∏è  Ruff n√£o encontrado. Instale com: pip install ruff"
fi

if command -v black &> /dev/null; then
    black .
    echo "‚úÖ Black executado"
else
    echo "‚ö†Ô∏è  Black n√£o encontrado. Instale com: pip install black"
fi

# 6) Commit das mudan√ßas
echo "üíæ Fazendo commit das mudan√ßas..."
git add -A
git commit -m "chore(v8): packaging + deps dedup + fix(caos/router) + cache L2 HMAC + tooling (pre-commit, gitleaks)

- Packaging do projeto para distribui√ß√£o e uso via CLI 'penin'
- Dep√™ndencias deduplicadas e documentadas; instru√≠do lockfile
- Corre√ß√£o de duplicidade em CAOS (phi_caos) com teste
- Refatora√ß√£o do router para um √∫nico tracker de or√ßamento
- Cache L2 com 'orjson + HMAC' para integridade
- Ferramentas de seguran√ßa e qualidade (pre-commit, gitleaks, envs, ignore)
- Licen√ßa adicionada"

echo "‚úÖ Commit realizado com sucesso!"

# 7) Push da branch
echo "üì§ Fazendo push da branch..."
git push origin chore/v8-upgrade

echo ""
echo "üéâ Upgrade v8.0 conclu√≠do!"
echo "=========================="
echo ""
echo "Pr√≥ximos passos:"
echo "1. Abrir PR: gh pr create --fill --base main --head chore/v8-upgrade"
echo "2. Revisar mudan√ßas no GitHub"
echo "3. Fazer merge ap√≥s aprova√ß√£o"
echo ""
echo "Para testar localmente:"
echo "- pip install -e ."
echo "- penin --help"
echo ""
echo "Para gerar lockfile:"
echo "- uv pip compile requirements.txt -o requirements-lock.txt"