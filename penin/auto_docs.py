"""
Livro Autoescrito / Docs Vivas
==============================

Gerador autom√°tico de documenta√ß√£o baseado no estado atual do sistema.
"""

from pathlib import Path
import datetime
import orjson
from typing import Dict, Any


def update_readme() -> None:
    """Atualiza README com estado atual do sistema"""
    root = Path(".")
    now = datetime.datetime.now(datetime.timezone.utc).isoformat()
    
    # Coletar m√©tricas do sistema
    try:
        from penin.omega.swarm import sample_global_state
        swarm_state = sample_global_state()
    except:
        swarm_state = {"error": "swarm not available"}
    
    try:
        from penin.omega.neural_chain import get_chain_head, verify_chain
        chain_head = get_chain_head()
        chain_valid = verify_chain()
    except:
        chain_head = None
        chain_valid = False
    
    # Gerar conte√∫do
    content = f"""# PENIN-Œ© ‚Äî Docs Autoatualizadas

_Gerado automaticamente em {now}Z_

## Estado Atual do Sistema

### Swarm Cognitivo
```json
{orjson.dumps(swarm_state, option=orjson.OPT_INDENT_2).decode()}
```

### Blockchain Neural
- √öltimo bloco: {chain_head['hash'][:16] if chain_head else 'N/A'}
- Cadeia v√°lida: {chain_valid}
- Timestamp: {datetime.datetime.fromtimestamp(chain_head['ts']).isoformat() if chain_head else 'N/A'}

### M√≥dulos Implementados
- ‚úÖ Equa√ß√£o de Vida (+) - Gate n√£o-compensat√≥rio
- ‚úÖ DSL Fractal - Propaga√ß√£o auto-similar
- ‚úÖ Swarm Cognitivo - Gossip local + agrega√ß√£o G
- ‚úÖ CAOS-KRATOS - Explora√ß√£o calibrada
- ‚úÖ Marketplace Cognitivo - Œ©-tokens internos
- ‚úÖ Blockchain Neural - Encadeamento HMAC
- ‚úÖ Auto-docs - Documenta√ß√£o viva

### Pr√≥ximos Passos
- Self-RAG recursivo
- Metaboliza√ß√£o de APIs
- Imunidade Digital
- Checkpoint & Reparo
- GAME + Darwiniano-Audit√°vel
- Zero-Consciousness Proof

## Como Usar

```bash
# Instalar depend√™ncias
pip install -e ".[full,dev]"

# Executar testes
python3 -m pytest tests/ -v

# Gerar docs
python -m penin.auto_docs
```

## Arquitetura

O sistema PENIN-Œ© implementa a Lemniscata 8+1 com os seguintes componentes:

1. **Equa√ß√£o de Vida (+)**: Gate n√£o-compensat√≥rio que determina Œ±_eff
2. **DSL Fractal**: Propaga√ß√£o hier√°rquica de par√¢metros
3. **Swarm Cognitivo**: Consenso distribu√≠do via gossip
4. **CAOS-KRATOS**: Explora√ß√£o adaptativa calibrada
5. **Marketplace**: Aloca√ß√£o de recursos cognitivos
6. **Blockchain Neural**: Auditoria com HMAC
7. **Auto-docs**: Documenta√ß√£o autogerada
8. **+1 Œ©-Œ£EA**: Coer√™ncia global fail-closed

Todos os componentes seguem o princ√≠pio fail-closed e s√£o audit√°veis via WORM.
"""
    
    # Salvar README
    readme_path = root / "README_AUTO.md"
    readme_path.write_text(content, encoding="utf-8")
    
    print(f"üìö README_AUTO.md atualizado em {now}")


if __name__ == "__main__":
    update_readme()