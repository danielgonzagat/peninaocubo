[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "penin"
version = "0.9.0"
description = "PENIN-Ω: IA³ Auto-Evolutiva com Ética Embutida"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [{name = "Daniel Penin"}]
requires-python = ">=3.11"

dependencies = [
    "pydantic>=2.0",
    "numpy>=1.24",
    "fastapi>=0.100",
    "uvicorn>=0.23",
    "httpx>=0.24",
    "orjson>=3.9",
    "prometheus-client>=0.17",
    "typer>=0.9.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4",
    "pytest-cov>=4.1",
    "pytest-asyncio>=0.21",
    "hypothesis>=6.80",
    "ruff>=0.1.0",
    "black>=23.0",
    "mypy>=1.5",
    "pre-commit>=3.3",
]

full = [
    "torch>=2.0",
    "transformers>=4.30",
    "sentence-transformers>=2.2",
    "rank-bm25>=0.2",
]

[project.scripts]
penin = "penin.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["penin*"]
exclude = ["tests*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["penin"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstract",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.black]
line-length = 100
target-version = ["py311", "py312", "py313"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.ruff_cache
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
