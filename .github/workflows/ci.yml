name: CI

on:
  push:
    branches: [ main, develop, cursor/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black mypy
      
      - name: Run ruff
        run: ruff check penin/ --output-format=github
        continue-on-error: true
      
      - name: Run black (check only)
        run: black --check penin/
        continue-on-error: true
      
      - name: Run mypy
        run: mypy penin/ --ignore-missing-imports
        continue-on-error: true

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,full]"
      
      - name: Run tests
        run: |
          pytest tests/ -v --tb=short --no-cov \
            --ignore=tests/test_math_core.py \
            --ignore=tests/test_vida_plus.py \
            -m "not slow" \
            --maxfail=10
      
      - name: Run core tests with coverage
        run: |
          pytest tests/core/ tests/ethics/ \
            --cov=penin \
            --cov-report=xml \
            --cov-report=term-missing
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-${{ matrix.python-version }}
        continue-on-error: true

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,full]"
      
      - name: Run integration tests
        run: |
          pytest tests/integrations/ -v --tb=short --no-cov
        continue-on-error: true
      
      - name: Run system tests
        run: |
          pytest tests/test_system_integration.py -v --tb=short --no-cov
        continue-on-error: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit
      
      - name: Run safety check
        run: safety check --json
        continue-on-error: true
      
      - name: Run bandit
        run: bandit -r penin/ -f json -o bandit-report.json
        continue-on-error: true
      
      - name: Upload bandit results
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json
        if: always()

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Check package
        run: twine check dist/*
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-packages
          path: dist/
